import Image from 'next/image';

import { getOneBag } from '../../../../../lib/mongoDB/controllers/bags-controllers';
import { productsProps } from '../../../../types/types';
import css from './page.module.css';
import '../../../../styles/globals.css';
import clsx from 'clsx';
import Button from '@/app/components/button/button';

export default async function Page({ params }: { params: Promise<{ id: string }> }) {
    const { id } = await params;
    // const { getRequest } = await params;
    const data: productsProps = await getOneBag(id);
    const availability: string = data.availability ? '–í –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ' : '–ù–µ–º–∞—î –≤ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ';
    const tags = data.tags.map(tag => (
        <li key={tag} className={css.tag}>
            {tag}
        </li>
    ));
    // console.log(tags);

    return (
        <div className={clsx('container', css.container)}>
            <h2 className="sectionTitle">{data.title}</h2>
            <div className={css.wrapper}>
                {' '}
                <div className={css.containerImage}>
                    <Image
                        width={577}
                        height={1000}
                        src={data.images[0]}
                        alt={data.title}
                        style={{
                            width: '100%',
                            maxWidth: '450px',
                            height: 'auto',
                            // maxHeight: '350px',
                            objectFit: 'cover',
                        }}
                    />
                    <div>
                        {' '}
                        <div className={css.boxPrice}>
                            <p
                                className={clsx(
                                    css.text && data.availability
                                        ? css.availabilityTrue
                                        : css.availabilityFalse
                                )}
                            >
                                {availability}
                            </p>
                            <p className={css.price}>‚Ç¥ {data.price}.00 –≥—Ä–Ω</p>
                        </div>
                        <div className={css.box}>
                            <p className={css.text}>
                                <span className={css.color}>–í–∏—Ä–æ–±–Ω–∏–∫:</span> {data.producer}
                            </p>
                            <p className={css.text}>
                                <span className={css.color}>–ú–æ–¥–µ–ª—å:</span> {data.model}
                            </p>
                            <div className={css.contain}>
                                <p className={clsx(css.text, css.color)}>–¢–µ–≥–∏:</p>
                                <ul className={clsx(css.text, css.listTags)}>{tags}</ul>
                            </div>
                        </div>
                        <div className={css.buttonBox}>
                            <Button>–î–æ–¥–∞—Ç–∏ –¥–æ üõí</Button>
                        </div>
                    </div>
                </div>
                <div className={css.characteristics}>
                    <h4 className={css.characteristicsTitle}>–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏</h4>
                    {/* <p className={css.text}>
                        <span className={css.color}>–í–∏—Ä–æ–±–Ω–∏–∫:</span> {data.producer}
                    </p>
                    <p className={css.text}>
                        <span className={css.color}>–ú–æ–¥–µ–ª—å:</span> {data.model}
                    </p> */}
                    <p className={css.text}>
                        <span className={css.color}>–ú–∞—Ç–µ—Ä—ñ–∞–ª –≤–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—è:</span> {data.material}
                    </p>
                    <p className={css.text}>
                        <span className={css.color}>–ú–∞—Ç–µ—Ä—ñ–∞–ª –¥–µ–∫–æ—Ä—É:</span>{' '}
                        {data.decorationMaterial}
                    </p>
                    <p className={css.text}>
                        <span className={css.color}>–†–æ–∑–º—ñ—Ä–∏:</span> {data.dimensions.width} x{' '}
                        {data.dimensions.height} x {data.dimensions.depth} —Å–º
                    </p>
                    <p className={css.text}>
                        <span className={css.color}>–î–æ–≤–∂–∏–Ω–∞ —Ä—É—á–∫–∏:</span> {data.handle} —Å–º
                    </p>
                    <p className={css.text}>
                        <span className={css.color}>–¢–∏–ø –∑–∞—Å—Ç—ñ–±–∫–∏:</span> {data.typeClasp}
                    </p>
                    <p className={css.text}>
                        <span className={css.color}>–ü—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è —Ç–æ–≤–∞—Ä—É:</span> {data.appointment}
                    </p>
                    <p className={css.text}>
                        <span className={css.color}>–ê—Ä—Ç–∏–∫–ª—å —Ç–æ–≤–∞—Ä—É:</span> {data.article}
                    </p>

                    {/* <p className={css.text}>–ó–∞–ø–æ–≤–Ω–µ–Ω–Ω—è: {data.filling}</p> */}
                </div>
            </div>
            <div className={css.description}>
                <span className={css.color}>–û–ø–∏—Å:</span> {data.description}
            </div>
        </div>
    );
}
